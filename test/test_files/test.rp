(defn + [a b] (core/add a b))
(def add (fn [a b] (fn [c d] (core/add (core/add (core/add a b) c) d))))
(defmacro + [a b] (cor/add a b))
(let [x '(add 1 2)
      y '(add x 2)]
      (add x y))
(def x 1)
(add (quote (1 2 3)))
(if x (printf "%d\n" (+ 1 2))
    (printf "%d\n" (+ 2 2)))
